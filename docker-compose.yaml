version: "3.7"
services:
  web:
    build:
      context: .
      dockerfile: web/Dockerfile
    image: twitter_web
    container_name: twitter_web
    environment:
      API_URL: http://api:8000
      HTTPS_SERVICE_PORT:
      VIRTUAL_HOST:
      VIRTUAL_PORT: 3000
      LETSENCRYPT_HOST:
      LETSENCRYPT_EMAIL:
    ports:
      - "53003:3000"
    depends_on:
      - api
    logging:
      options:
        max-file: '3'
        max-size: 10m
    restart: always
    networks:
      - twitter-crawler-network
  api:
    build:
      context: .
      dockerfile: api/Dockerfile
    image: twitter_web_api
    container_name: twitter_web_api
    environment:
      DATABASE_URL:
      MONGO_DATABASE: twitterdb
      S3_ENDPOINT_URL: ${MEDIA_ENDPOINT_URL}
      BUCKET_NAME: ${CREATE_BUCKET_NAME}
    depends_on:
      - mongo
    logging:
      options:
        max-file: '3'
        max-size: 10m
    restart: always
    networks:
      - twitter-crawler-network
  crawler:
    build:
      context: .
      dockerfile: crawler/Dockerfile
    image: twitter_crawler
    container_name: twitter_crawler
    environment:
      TZ: "Asia/Tokyo"
      DATABASE_URL:
      MONGO_DATABASE: twitterdb
      TWITTER_CONSUMER_KEY:
      TWITTER_CONSUMER_SECRET:
      TWITTER_ACCESS_TOKEN:
      TWITTER_ACCESS_TOKEN_SECRET:
      AWS_ACCESS_KEY: ${MINIO_ROOT_USER}
      AWS_SECRET_KEY: ${MINIO_ROOT_PASSWORD}
      S3_ENDPOINT_URL: ${MINIO_ENDPOINT_URL}
      BUCKET_NAME: ${CREATE_BUCKET_NAME}
      TWITTER_USER_IDS:
      LOGGING_LEVEL:
      OUTPUT_LOG_FILE_ENABLED: "false"
    depends_on:
      - mongo
      - minio
    logging:
      options:
        max-file: '3'
        max-size: 10m
    restart: always
    networks:
      - twitter-crawler-network
  mongo:
    image: mongo
    container_name: twitter_crawler_mongodb
    command: --logpath=/var/log/mongodb/mongo.log --profile=1 --slowms=100
    environment:
      MONGO_DATABASE: twitterdb
      MONGO_INITDB_ROOT_USERNAME:
      MONGO_INITDB_ROOT_PASSWORD:
    volumes:
      - datadir:/data/db
      - mongo-log:/var/log/mongodb
    ports:
      - "27019:27017"
    logging:
      options:
        max-file: '3'
        max-size: 10m
    restart: always
    networks:
      - twitter-crawler-network
  minio:
    image: minio/minio
    container_name: twitter_crawler_minio
    command: [ 'server', '/data', '--console-address', ':9001' ]
    environment:
      MINIO_ROOT_USER:
      MINIO_ROOT_PASSWORD:
      VIRTUAL_HOST: ${MINIO_VIRTUAL_HOST}
      VIRTUAL_PORT: 9000
      LETSENCRYPT_HOST: ${MINIO_LETSENCRYPT_HOST}
      LETSENCRYPT_EMAIL:
    ports:
      - "59090:9000"
      - "59091:9001"
    logging:
      options:
        max-file: '3'
        max-size: 10m
    restart: always
    volumes:
      - minio-data:/data
    networks:
      - twitter-crawler-network
  createBuckets:
    image: minio/mc
    container_name: twitter_crawler_create_buckets
    depends_on:
      - minio
    environment:
      - MINIO_ROOT_USER
      - MINIO_ROOT_PASSWORD
      - CREATE_BUCKET_NAME
    entrypoint: >
      /bin/sh -c "
      for i in {1..10}; do (/usr/bin/mc config host add minioAlias http://minio:9000 ${MINIO_ROOT_USER} ${MINIO_ROOT_PASSWORD}) 2> /dev/null && break; sleep 1; done;
      /usr/bin/mc config host add minioAlias http://minio:9000 ${MINIO_ROOT_USER} ${MINIO_ROOT_PASSWORD};
      /usr/bin/mc mb --ignore-existing minioAlias/${CREATE_BUCKET_NAME};
      /usr/bin/mc policy set public minioAlias/${CREATE_BUCKET_NAME};
      exit 0;
      "
    networks:
      - twitter-crawler-network

volumes:
  datadir:
  mongo-log:
  minio-data:

networks:
#  proxy-network:
#    external: true
#    name: proxy_network
  twitter-crawler-network:
    name: twitter_crawler_network
